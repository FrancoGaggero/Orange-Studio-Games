---
export interface Props {
  title: string;
  category: string;
  description: string;
  playStoreUrl: string;
  appStoreUrl?: string;
  imageUrl: string;
  backgroundColor?: string;
  titleEn?: string;
  categoryEn?: string;
  descriptionEn?: string;
  downloads?: string;
  rating?: number;
  reviewsCount?: string;
}

const { 
  title, 
  category, 
  description, 
  playStoreUrl, 
  appStoreUrl, 
  imageUrl, 
  backgroundColor = '#fff', 
  titleEn, 
  categoryEn, 
  descriptionEn,
  downloads = "1M+",
  rating = 4.5,
  reviewsCount = "10K+"
} = Astro.props;
---

<div class="flip-card perspective-1000">
  <div class="flip-card-inner relative w-full h-full transition-transform duration-700 transform-style-preserve-3d">
    
    <!-- Frente de la card -->
    <div class="flip-card-front absolute inset-0 w-full h-full backface-hidden bg-white rounded-2xl overflow-hidden shadow-lg shadow-orange-500/10 border border-orange-500/10">
      <div class="w-full h-32 flex items-center justify-center bg-gray-50 p-3">
        <img src={imageUrl} alt={title} class="w-auto h-full max-w-full object-contain transition-transform duration-300 rounded-lg" />
      </div>
      
      <div class="p-5">
        <div class="mb-4">
          <h3 class="text-lg font-semibold text-gray-800 mb-2 leading-tight" data-es={title} data-en={titleEn || title}>{title}</h3>
          <div class="flex items-center gap-4">
            <span class="text-gray-600 text-sm font-medium uppercase tracking-wide" data-es={category} data-en={categoryEn || category}>{category}</span>
            <span class="bg-gradient-to-r from-green-500 to-green-600 text-white px-3 py-1 rounded-full text-xs font-semibold tracking-wide" data-es="GRATIS" data-en="FREE">GRATIS</span>
          </div>
        </div>
        
        <p class="text-gray-600 text-sm leading-relaxed mb-4 line-clamp-3" data-es={description} data-en={descriptionEn || description}>{description}</p>
        
        <div class="flex items-center justify-between">
          <a href={playStoreUrl} target="_blank" rel="noopener noreferrer" 
             class="flex items-center gap-2 bg-gradient-to-r from-blue-500 to-green-500 text-white px-4 py-2 rounded-lg text-sm font-medium transition-all duration-300 hover:from-blue-600 hover:to-green-600 hover:scale-105">
            <svg width="16" height="16" viewBox="0 0 24 24" fill="none">
              <path d="M3 20.5V3.5C3 2.91 3.34 2.39 3.84 2.15L13.69 12L3.84 21.85C3.34 21.61 3 21.09 3 20.5ZM16.81 15.12L6.05 21.34L14.54 12.85L16.81 15.12ZM20.16 10.81C20.5 11.08 20.75 11.5 20.75 12C20.75 12.5 20.53 12.92 20.16 13.19L17.89 14.5L15.39 12L17.89 9.5L20.16 10.81ZM6.05 2.66L16.81 8.88L14.54 11.15L6.05 2.66Z" fill="currentColor"/>
            </svg>
            <span data-es="Descargar" data-en="Download">Descargar</span>
          </a>
          
          <button class="flip-trigger bg-gradient-to-r from-orange-500 to-yellow-500 text-white px-4 py-2 rounded-lg text-sm font-medium transition-all duration-300 hover:from-orange-600 hover:to-yellow-600 hover:scale-105">
            <span data-es="+ INFO" data-en="+ INFO">+ INFO</span>
          </button>
        </div>
      </div>
    </div>

    <!-- Parte de atras de la card -->
    <div class="flip-card-back absolute inset-0 w-full h-full backface-hidden rotate-y-180 bg-gradient-to-br from-orange-500 to-yellow-500 rounded-2xl overflow-hidden shadow-lg text-white">
      <div class="p-5 h-full flex flex-col justify-between">
        <div>
          <h3 class="text-xl font-bold mb-4 text-center" data-es={title} data-en={titleEn || title}>{title}</h3>
          
          <div class="space-y-3">
            <!-- Descargas -->
            <div class="flex items-center justify-between bg-white/20 rounded-lg p-3 backdrop-blur-sm">
              <div class="flex items-center gap-3">
                <div class="w-10 h-10 bg-white/30 rounded-full flex items-center justify-center">
                  <svg width="20" height="20" viewBox="0 0 24 24" fill="currentColor">
                    <path d="M5,20H19V18H5M19,9H15V3H9V9H5L12,16L19,9Z"/>
                  </svg>
                </div>
                <div>
                  <p class="text-sm opacity-90" data-es="Descargas" data-en="Downloads">Descargas</p>
                  <p class="font-bold text-lg">{downloads}</p>
                </div>
              </div>
            </div>

            <!-- Rating -->
            <div class="flex items-center justify-between bg-white/20 rounded-lg p-3 backdrop-blur-sm">
              <div class="flex items-center gap-3">
                <div class="w-10 h-10 bg-white/30 rounded-full flex items-center justify-center">
                  <svg width="20" height="20" viewBox="0 0 24 24" fill="currentColor">
                    <path d="M12,17.27L18.18,21L16.54,13.97L22,9.24L14.81,8.62L12,2L9.19,8.62L2,9.24L7.46,13.97L5.82,21L12,17.27Z"/>
                  </svg>
                </div>
                <div>
                  <p class="text-sm opacity-90" data-es="Valoración" data-en="Rating">Valoración</p>
                  <div class="flex items-center gap-2">
                    <p class="font-bold text-lg">{rating}</p>
                    <div class="flex gap-1">
                      {Array.from({length: 5}, (_, i) => (
                        <svg width="12" height="12" viewBox="0 0 24 24" fill={i < Math.floor(rating) ? "currentColor" : "none"} stroke="currentColor" stroke-width="2">
                          <path d="M12,17.27L18.18,21L16.54,13.97L22,9.24L14.81,8.62L12,2L9.19,8.62L2,9.24L7.46,13.97L5.82,21L12,17.27Z"/>
                        </svg>
                      ))}
                    </div>
                  </div>
                </div>
              </div>
            </div>

            <!-- Reseñas -->
            <div class="flex items-center justify-between bg-white/20 rounded-lg p-3 backdrop-blur-sm">
              <div class="flex items-center gap-3">
                <div class="w-10 h-10 bg-white/30 rounded-full flex items-center justify-center">
                  <svg width="20" height="20" viewBox="0 0 24 24" fill="currentColor">
                    <path d="M20,2H4A2,2 0 0,0 2,4V22L6,18H20A2,2 0 0,0 22,16V4C22,2.89 21.1,2 20,2Z"/>
                  </svg>
                </div>
                <div>
                  <p class="text-sm opacity-90" data-es="Reseñas" data-en="Reviews">Reseñas</p>
                  <p class="font-bold text-lg">{reviewsCount}</p>
                </div>
              </div>
            </div>
          </div>
        </div>

        <div class="flex gap-2 mt-3 mb-1">
          <a href={playStoreUrl} target="_blank" rel="noopener noreferrer" 
             class="flex-1 flex items-center justify-center gap-2 bg-white/20 hover:bg-white/30 backdrop-blur-sm text-white px-3 py-2.5 rounded-lg text-sm font-medium transition-all duration-300 hover:scale-105">
            <svg width="16" height="16" viewBox="0 0 24 24" fill="none">
              <path d="M3 20.5V3.5C3 2.91 3.34 2.39 3.84 2.15L13.69 12L3.84 21.85C3.34 21.61 3 21.09 3 20.5ZM16.81 15.12L6.05 21.34L14.54 12.85L16.81 15.12ZM20.16 10.81C20.5 11.08 20.75 11.5 20.75 12C20.75 12.5 20.53 12.92 20.16 13.19L17.89 14.5L15.39 12L17.89 9.5L20.16 10.81ZM6.05 2.66L16.81 8.88L14.54 11.15L6.05 2.66Z" fill="currentColor"/>
            </svg>
            <span data-es="Descargar" data-en="Download">Descargar</span>
          </a>
          
          <button class="flip-trigger bg-white/20 hover:bg-white/30 backdrop-blur-sm text-white px-3 py-2.5 rounded-lg text-sm font-medium transition-all duration-300 hover:scale-105">
            <span data-es="VOLVER" data-en="BACK">VOLVER</span>
          </button>
        </div>
      </div>
    </div>
  </div>
</div>

<style>
  .perspective-1000 {
    perspective: 1000px;
  }

  .transform-style-preserve-3d {
    transform-style: preserve-3d;
  }

  .backface-hidden {
    backface-visibility: hidden;
  }

  .rotate-y-180 {
    transform: rotateY(180deg);
  }

  .flip-card {
    width: 100%;
    height: 400px;
  }

  .flip-card-inner {
    transition: transform 0.7s cubic-bezier(0.4, 0.2, 0.2, 1);
  }

  /* Solo voltear cuando tenga la clase 'flipped' - NO en hover */
  .flip-card.flipped .flip-card-inner {
    transform: rotateY(180deg);
  }

  .line-clamp-3 {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  /* Efecto hover sutil en las cards sin voltear */
  .flip-card:hover .flip-card-front {
    transform: translateY(-2px);
    box-shadow: 0 10px 25px rgba(251, 146, 60, 0.2);
  }

  .flip-card-front {
    transition: transform 0.3s ease, box-shadow 0.3s ease;
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Manejar clicks en botones de flip
    document.querySelectorAll('.flip-trigger').forEach(button => {
      button.addEventListener('click', function(e: Event) {
        e.preventDefault();
        e.stopPropagation();
        
        // Obtener el elemento que disparó el evento
        const target = e.target as HTMLElement;
        
        // Buscar la card más cercana, ya sea desde el botón o desde el span interno
        const flipCard = target.closest('.flip-card') || target.parentElement?.closest('.flip-card');
        
        if (flipCard) {
          flipCard.classList.toggle('flipped');
        }
      });
    });

    // También manejar clicks en los spans dentro de los botones
    document.querySelectorAll('.flip-trigger span').forEach(span => {
      span.addEventListener('click', function(e: Event) {
        e.preventDefault();
        e.stopPropagation();
        
        const target = e.target as HTMLElement;
        const flipCard = target.closest('.flip-card');
        
        if (flipCard) {
          flipCard.classList.toggle('flipped');
        }
      });
    });
  });
</script>


